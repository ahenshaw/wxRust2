#![allow(dead_code)]
#![allow(non_upper_case_globals)]
#![allow(unused_parens)]

#[cxx::bridge(namespace = "wxrust")]
mod ffi {
    #[namespace = ""]
    unsafe extern "C++" {
        include!("wx/include/wxrust.h");
        include!("wx/include/wxrust2.h");

        type wxPoint;
        type wxSize;
        type wxString;
        type wxValidator;
        type wxWindowList;
        type wxRect;
        type wxSizer;
        type wxFont;
        type wxRegion;
        type wxColour;
        type wxPalette;
        type wxEvtHandler;
        type wxKeyEvent;
        type wxEvent;
        type wxToolTip;
        type wxMenu;
        type wxAcceleratorTable;
        type wxDropTarget;
        type wxLayoutConstraints;
        type wxCaret;
        type wxCursor;
        type wxUpdateUIEvent;
        type wxIdleEvent;
        // CLASS: wxButton
        type wxButton;
        // CTOR: fn wxButton(self: Pin<&mut wxButton>);
        // CTOR: unsafe fn wxButton(self: Pin<&mut wxButton>, parent: *mut wxWindow, id: i32, label: &wxString, pos: &wxPoint, size: &wxSize, style: i32, validator: &wxValidator, name: &wxString);
        // CXX_UNSUPPORTED: unsafe fn Create(self: Pin<&mut wxButton>, parent: *mut wxWindow, id: i32, label: &wxString, pos: &wxPoint, size: &wxSize, style: i32, validator: &wxValidator, name: &wxString) -> bool;
        // BLOCKED: fn GetAuthNeeded(self: Pin<&mut wxButton>) -> bool;
        // CXX_UNSUPPORTED: fn GetLabel(self: Pin<&mut wxButton>) -> wxString;
        fn SetAuthNeeded(self: Pin<&mut wxButton>, needed: bool);
        unsafe fn SetDefault(self: Pin<&mut wxButton>) -> *mut wxWindow;
        fn SetLabel(self: Pin<&mut wxButton>, label: &wxString);
        // CXX_UNSUPPORTED: unsafe fn GetDefaultSize(self: Pin<&mut wxButton>, win: *mut wxWindow) -> wxSize;
        // CLASS: wxWindow
        type wxWindow;
        // BLOCKED: fn AcceptsFocus(self: Pin<&mut wxWindow>) -> bool;
        // BLOCKED: fn AcceptsFocusFromKeyboard(self: Pin<&mut wxWindow>) -> bool;
        // BLOCKED: fn AcceptsFocusRecursively(self: Pin<&mut wxWindow>) -> bool;
        // BLOCKED: fn DisableFocusFromKeyboard(self: Pin<&mut wxWindow>);
        // BLOCKED: fn IsFocusable(self: Pin<&mut wxWindow>) -> bool;
        // BLOCKED: fn CanAcceptFocus(self: Pin<&mut wxWindow>) -> bool;
        // BLOCKED: fn CanAcceptFocusFromKeyboard(self: Pin<&mut wxWindow>) -> bool;
        // BLOCKED: fn HasFocus(self: Pin<&mut wxWindow>) -> bool;
        fn SetCanFocus(self: Pin<&mut wxWindow>, canFocus: bool);
        // BLOCKED: fn EnableVisibleFocus(self: Pin<&mut wxWindow>, enable: bool);
        fn SetFocus(self: Pin<&mut wxWindow>);
        fn SetFocusFromKbd(self: Pin<&mut wxWindow>);
        // BLOCKED: unsafe fn AddChild(self: Pin<&mut wxWindow>, child: *mut wxWindow);
        fn DestroyChildren(self: Pin<&mut wxWindow>) -> bool;
        // CXX_UNSUPPORTED: unsafe fn FindWindow(self: Pin<&mut wxWindow>, id: i32) -> *mut wxWindow;
        // BLOCKED: unsafe fn FindWindow(self: Pin<&mut wxWindow>, name: &wxString) -> *mut wxWindow;
        // BLOCKED: fn GetChildren(self: Pin<&mut wxWindow>) -> Pin<&mut wxWindowList>;
        // BLOCKED: fn GetChildren(self: Pin<&mut wxWindow>) -> &wxWindowList;
        // BLOCKED: unsafe fn RemoveChild(self: Pin<&mut wxWindow>, child: *mut wxWindow);
        // BLOCKED: unsafe fn GetGrandParent(self: Pin<&mut wxWindow>) -> *mut wxWindow;
        // BLOCKED: unsafe fn GetNextSibling(self: Pin<&mut wxWindow>) -> *mut wxWindow;
        // BLOCKED: unsafe fn GetParent(self: Pin<&mut wxWindow>) -> *mut wxWindow;
        // BLOCKED: unsafe fn GetPrevSibling(self: Pin<&mut wxWindow>) -> *mut wxWindow;
        // BLOCKED: unsafe fn IsDescendant(self: Pin<&mut wxWindow>, win: *mut wxWindow) -> bool;
        // BLOCKED: unsafe fn Reparent(self: Pin<&mut wxWindow>, newParent: *mut wxWindow) -> bool;
        fn AlwaysShowScrollbars(self: Pin<&mut wxWindow>, hflag: bool, vflag: bool);
        // CXX_UNSUPPORTED: fn GetScrollPos(self: Pin<&mut wxWindow>, orientation: i32) -> i32;
        // CXX_UNSUPPORTED: fn GetScrollRange(self: Pin<&mut wxWindow>, orientation: i32) -> i32;
        // CXX_UNSUPPORTED: fn GetScrollThumb(self: Pin<&mut wxWindow>, orientation: i32) -> i32;
        // CXX_UNSUPPORTED: fn CanScroll(self: Pin<&mut wxWindow>, orient: i32) -> bool;
        // CXX_UNSUPPORTED: fn HasScrollbar(self: Pin<&mut wxWindow>, orient: i32) -> bool;
        // CXX_UNSUPPORTED: fn IsScrollbarAlwaysShown(self: Pin<&mut wxWindow>, orient: i32) -> bool;
        // CXX_UNSUPPORTED: fn ScrollLines(self: Pin<&mut wxWindow>, lines: i32) -> bool;
        // CXX_UNSUPPORTED: fn ScrollPages(self: Pin<&mut wxWindow>, pages: i32) -> bool;
        // CXX_UNSUPPORTED: unsafe fn ScrollWindow(self: Pin<&mut wxWindow>, dx: i32, dy: i32, rect: *const wxRect);
        fn LineUp(self: Pin<&mut wxWindow>) -> bool;
        fn LineDown(self: Pin<&mut wxWindow>) -> bool;
        fn PageUp(self: Pin<&mut wxWindow>) -> bool;
        fn PageDown(self: Pin<&mut wxWindow>) -> bool;
        // CXX_UNSUPPORTED: fn SetScrollPos(self: Pin<&mut wxWindow>, orientation: i32, pos: i32, refresh: bool);
        // CXX_UNSUPPORTED: fn SetScrollbar(self: Pin<&mut wxWindow>, orientation: i32, position: i32, thumbSize: i32, range: i32, refresh: bool);
        fn BeginRepositioningChildren(self: Pin<&mut wxWindow>) -> bool;
        fn EndRepositioningChildren(self: Pin<&mut wxWindow>);
        // BLOCKED: fn CacheBestSize(self: Pin<&mut wxWindow>, size: &wxSize);
        // CXX_UNSUPPORTED: fn ClientToWindowSize(self: Pin<&mut wxWindow>, size: &wxSize) -> wxSize;
        // CXX_UNSUPPORTED: fn WindowToClientSize(self: Pin<&mut wxWindow>, size: &wxSize) -> wxSize;
        fn Fit(self: Pin<&mut wxWindow>);
        fn FitInside(self: Pin<&mut wxWindow>);
        // CXX_UNSUPPORTED: fn FromDIP(self: Pin<&mut wxWindow>, sz: &wxSize) -> wxSize;
        // CXX_UNSUPPORTED: fn FromDIP(self: Pin<&mut wxWindow>, pt: &wxPoint) -> wxPoint;
        // CXX_UNSUPPORTED: fn FromDIP(self: Pin<&mut wxWindow>, d: i32) -> i32;
        // CXX_UNSUPPORTED: fn ToDIP(self: Pin<&mut wxWindow>, sz: &wxSize) -> wxSize;
        // CXX_UNSUPPORTED: fn ToDIP(self: Pin<&mut wxWindow>, pt: &wxPoint) -> wxPoint;
        // CXX_UNSUPPORTED: fn ToDIP(self: Pin<&mut wxWindow>, d: i32) -> i32;
        // CXX_UNSUPPORTED: fn GetBestSize(self: Pin<&mut wxWindow>) -> wxSize;
        // CXX_UNSUPPORTED: fn GetBestHeight(self: Pin<&mut wxWindow>, width: i32) -> i32;
        // CXX_UNSUPPORTED: fn GetBestWidth(self: Pin<&mut wxWindow>, height: i32) -> i32;
        // BLOCKED: unsafe fn GetClientSize(self: Pin<&mut wxWindow>, width: *mut i32, height: *mut i32);
        // CXX_UNSUPPORTED: fn GetClientSize(self: Pin<&mut wxWindow>) -> wxSize;
        // CXX_UNSUPPORTED: fn GetEffectiveMinSize(self: Pin<&mut wxWindow>) -> wxSize;
        // CXX_UNSUPPORTED: fn GetMaxClientSize(self: Pin<&mut wxWindow>) -> wxSize;
        // CXX_UNSUPPORTED: fn GetMaxSize(self: Pin<&mut wxWindow>) -> wxSize;
        // CXX_UNSUPPORTED: fn GetMinClientSize(self: Pin<&mut wxWindow>) -> wxSize;
        // CXX_UNSUPPORTED: fn GetMinSize(self: Pin<&mut wxWindow>) -> wxSize;
        // CXX_UNSUPPORTED: fn GetMinWidth(self: Pin<&mut wxWindow>) -> i32;
        // CXX_UNSUPPORTED: fn GetMinHeight(self: Pin<&mut wxWindow>) -> i32;
        // CXX_UNSUPPORTED: fn GetMaxWidth(self: Pin<&mut wxWindow>) -> i32;
        // CXX_UNSUPPORTED: fn GetMaxHeight(self: Pin<&mut wxWindow>) -> i32;
        // BLOCKED: unsafe fn GetSize(self: Pin<&mut wxWindow>, width: *mut i32, height: *mut i32);
        // CXX_UNSUPPORTED: fn GetSize(self: Pin<&mut wxWindow>) -> wxSize;
        // CXX_UNSUPPORTED: fn GetVirtualSize(self: Pin<&mut wxWindow>) -> wxSize;
        // BLOCKED: unsafe fn GetVirtualSize(self: Pin<&mut wxWindow>, width: *mut i32, height: *mut i32);
        // CXX_UNSUPPORTED: fn GetBestVirtualSize(self: Pin<&mut wxWindow>) -> wxSize;
        // CXX_UNSUPPORTED: fn GetContentScaleFactor(self: Pin<&mut wxWindow>) -> double;
        // CXX_UNSUPPORTED: fn GetDPIScaleFactor(self: Pin<&mut wxWindow>) -> double;
        // CXX_UNSUPPORTED: fn GetWindowBorderSize(self: Pin<&mut wxWindow>) -> wxSize;
        // CXX_UNSUPPORTED: fn InformFirstDirection(self: Pin<&mut wxWindow>, direction: i32, size: i32, availableOtherDir: i32) -> bool;
        fn InvalidateBestSize(self: Pin<&mut wxWindow>);
        fn PostSizeEvent(self: Pin<&mut wxWindow>);
        fn PostSizeEventToParent(self: Pin<&mut wxWindow>);
        // CXX_UNSUPPORTED: fn SendSizeEvent(self: Pin<&mut wxWindow>, flags: i32);
        // CXX_UNSUPPORTED: fn SendSizeEventToParent(self: Pin<&mut wxWindow>, flags: i32);
        // CXX_UNSUPPORTED: fn SetClientSize(self: Pin<&mut wxWindow>, width: i32, height: i32);
        #[rust_name = "SetClientSize1"]
        fn SetClientSize(self: Pin<&mut wxWindow>, size: &wxSize);
        #[rust_name = "SetClientSize2"]
        fn SetClientSize(self: Pin<&mut wxWindow>, rect: &wxRect);
        unsafe fn SetContainingSizer(self: Pin<&mut wxWindow>, sizer: *mut wxSizer);
        fn SetInitialSize(self: Pin<&mut wxWindow>, size: &wxSize);
        fn SetMaxClientSize(self: Pin<&mut wxWindow>, size: &wxSize);
        fn SetMaxSize(self: Pin<&mut wxWindow>, size: &wxSize);
        fn SetMinClientSize(self: Pin<&mut wxWindow>, size: &wxSize);
        fn SetMinSize(self: Pin<&mut wxWindow>, size: &wxSize);
        // CXX_UNSUPPORTED: fn SetSize(self: Pin<&mut wxWindow>, x: i32, y: i32, width: i32, height: i32, sizeFlags: i32);
        // BLOCKED: fn SetSize(self: Pin<&mut wxWindow>, rect: &wxRect);
        // BLOCKED: fn SetSize(self: Pin<&mut wxWindow>, size: &wxSize);
        // CXX_UNSUPPORTED: fn SetSize(self: Pin<&mut wxWindow>, width: i32, height: i32);
        fn SetSizeHints(self: Pin<&mut wxWindow>, minSize: &wxSize, maxSize: &wxSize, incSize: &wxSize);
        // CXX_UNSUPPORTED: fn SetSizeHints(self: Pin<&mut wxWindow>, minW: i32, minH: i32, maxW: i32, maxH: i32, incW: i32, incH: i32);
        // CXX_UNSUPPORTED: fn SetVirtualSize(self: Pin<&mut wxWindow>, width: i32, height: i32);
        #[rust_name = "SetVirtualSize1"]
        fn SetVirtualSize(self: Pin<&mut wxWindow>, size: &wxSize);
        // CXX_UNSUPPORTED: unsafe fn FromDIP(self: Pin<&mut wxWindow>, sz: &wxSize, w: *const wxWindow) -> wxSize;
        // CXX_UNSUPPORTED: unsafe fn FromDIP(self: Pin<&mut wxWindow>, pt: &wxPoint, w: *const wxWindow) -> wxPoint;
        // CXX_UNSUPPORTED: unsafe fn FromDIP(self: Pin<&mut wxWindow>, d: i32, w: *const wxWindow) -> i32;
        // CXX_UNSUPPORTED: unsafe fn ToDIP(self: Pin<&mut wxWindow>, sz: &wxSize, w: *const wxWindow) -> wxSize;
        // CXX_UNSUPPORTED: unsafe fn ToDIP(self: Pin<&mut wxWindow>, pt: &wxPoint, w: *const wxWindow) -> wxPoint;
        // CXX_UNSUPPORTED: unsafe fn ToDIP(self: Pin<&mut wxWindow>, d: i32, w: *const wxWindow) -> i32;
        // CXX_UNSUPPORTED: fn Center(self: Pin<&mut wxWindow>, dir: i32);
        // CXX_UNSUPPORTED: fn CenterOnParent(self: Pin<&mut wxWindow>, dir: i32);
        // CXX_UNSUPPORTED: fn Centre(self: Pin<&mut wxWindow>, direction: i32);
        // CXX_UNSUPPORTED: fn CentreOnParent(self: Pin<&mut wxWindow>, direction: i32);
        // BLOCKED: unsafe fn GetPosition(self: Pin<&mut wxWindow>, x: *mut i32, y: *mut i32);
        // CXX_UNSUPPORTED: fn GetPosition(self: Pin<&mut wxWindow>) -> wxPoint;
        // CXX_UNSUPPORTED: fn GetRect(self: Pin<&mut wxWindow>) -> wxRect;
        // BLOCKED: unsafe fn GetScreenPosition(self: Pin<&mut wxWindow>, x: *mut i32, y: *mut i32);
        // CXX_UNSUPPORTED: fn GetScreenPosition(self: Pin<&mut wxWindow>) -> wxPoint;
        // CXX_UNSUPPORTED: fn GetScreenRect(self: Pin<&mut wxWindow>) -> wxRect;
        // CXX_UNSUPPORTED: fn GetClientAreaOrigin(self: Pin<&mut wxWindow>) -> wxPoint;
        // CXX_UNSUPPORTED: fn GetClientRect(self: Pin<&mut wxWindow>) -> wxRect;
        // CXX_UNSUPPORTED: fn Move(self: Pin<&mut wxWindow>, x: i32, y: i32, flags: i32);
        // CXX_UNSUPPORTED: fn Move(self: Pin<&mut wxWindow>, pt: &wxPoint, flags: i32);
        fn SetPosition(self: Pin<&mut wxWindow>, pt: &wxPoint);
        // BLOCKED: unsafe fn ClientToScreen(self: Pin<&mut wxWindow>, x: *mut i32, y: *mut i32);
        // CXX_UNSUPPORTED: fn ClientToScreen(self: Pin<&mut wxWindow>, pt: &wxPoint) -> wxPoint;
        // CXX_UNSUPPORTED: fn ConvertDialogToPixels(self: Pin<&mut wxWindow>, pt: &wxPoint) -> wxPoint;
        // CXX_UNSUPPORTED: fn ConvertDialogToPixels(self: Pin<&mut wxWindow>, sz: &wxSize) -> wxSize;
        // CXX_UNSUPPORTED: fn ConvertPixelsToDialog(self: Pin<&mut wxWindow>, pt: &wxPoint) -> wxPoint;
        // CXX_UNSUPPORTED: fn ConvertPixelsToDialog(self: Pin<&mut wxWindow>, sz: &wxSize) -> wxSize;
        // BLOCKED: unsafe fn ScreenToClient(self: Pin<&mut wxWindow>, x: *mut i32, y: *mut i32);
        // CXX_UNSUPPORTED: fn ScreenToClient(self: Pin<&mut wxWindow>, pt: &wxPoint) -> wxPoint;
        fn ClearBackground(self: Pin<&mut wxWindow>);
        fn Freeze(self: Pin<&mut wxWindow>);
        fn Thaw(self: Pin<&mut wxWindow>);
        // BLOCKED: fn IsFrozen(self: Pin<&mut wxWindow>) -> bool;
        // CXX_UNSUPPORTED: fn GetBackgroundColour(self: Pin<&mut wxWindow>) -> wxColour;
        // CXX_UNSUPPORTED: fn GetBackgroundStyle(self: Pin<&mut wxWindow>) -> wxBackgroundStyle;
        // CXX_UNSUPPORTED: fn GetCharHeight(self: Pin<&mut wxWindow>) -> i32;
        // CXX_UNSUPPORTED: fn GetCharWidth(self: Pin<&mut wxWindow>) -> i32;
        // CXX_UNSUPPORTED: fn GetDefaultAttributes(self: Pin<&mut wxWindow>) -> wxVisualAttributes;
        // CXX_UNSUPPORTED: fn GetDPI(self: Pin<&mut wxWindow>) -> wxSize;
        // CXX_UNSUPPORTED: fn GetFont(self: Pin<&mut wxWindow>) -> wxFont;
        // CXX_UNSUPPORTED: fn GetForegroundColour(self: Pin<&mut wxWindow>) -> wxColour;
        // BLOCKED: unsafe fn GetTextExtent(self: Pin<&mut wxWindow>, string: &wxString, w: *mut i32, h: *mut i32, descent: *mut i32, externalLeading: *mut i32, font: *const wxFont);
        // CXX_UNSUPPORTED: fn GetTextExtent(self: Pin<&mut wxWindow>, string: &wxString) -> wxSize;
        // BLOCKED: fn GetUpdateRegion(self: Pin<&mut wxWindow>) -> &wxRegion;
        // CXX_UNSUPPORTED: fn GetUpdateClientRect(self: Pin<&mut wxWindow>) -> wxRect;
        fn HasTransparentBackground(self: Pin<&mut wxWindow>) -> bool;
        unsafe fn Refresh(self: Pin<&mut wxWindow>, eraseBackground: bool, rect: *const wxRect);
        fn RefreshRect(self: Pin<&mut wxWindow>, rect: &wxRect, eraseBackground: bool);
        fn Update(self: Pin<&mut wxWindow>);
        fn SetBackgroundColour(self: Pin<&mut wxWindow>, colour: &wxColour) -> bool;
        // CXX_UNSUPPORTED: fn SetBackgroundStyle(self: Pin<&mut wxWindow>, style: wxBackgroundStyle) -> bool;
        // BLOCKED: unsafe fn IsTransparentBackgroundSupported(self: Pin<&mut wxWindow>, reason: *mut wxString) -> bool;
        fn SetFont(self: Pin<&mut wxWindow>, font: &wxFont) -> bool;
        fn SetForegroundColour(self: Pin<&mut wxWindow>, colour: &wxColour) -> bool;
        fn SetOwnBackgroundColour(self: Pin<&mut wxWindow>, colour: &wxColour);
        // BLOCKED: fn InheritsBackgroundColour(self: Pin<&mut wxWindow>) -> bool;
        // BLOCKED: fn UseBgCol(self: Pin<&mut wxWindow>) -> bool;
        // BLOCKED: fn UseBackgroundColour(self: Pin<&mut wxWindow>) -> bool;
        fn SetOwnFont(self: Pin<&mut wxWindow>, font: &wxFont);
        fn SetOwnForegroundColour(self: Pin<&mut wxWindow>, colour: &wxColour);
        // BLOCKED: fn UseForegroundColour(self: Pin<&mut wxWindow>) -> bool;
        // BLOCKED: fn InheritsForegroundColour(self: Pin<&mut wxWindow>) -> bool;
        fn SetPalette(self: Pin<&mut wxWindow>, pal: &wxPalette);
        // BLOCKED: fn ShouldInheritColours(self: Pin<&mut wxWindow>) -> bool;
        fn SetThemeEnabled(self: Pin<&mut wxWindow>, enable: bool);
        // BLOCKED: fn GetThemeEnabled(self: Pin<&mut wxWindow>) -> bool;
        fn CanSetTransparent(self: Pin<&mut wxWindow>) -> bool;
        // CXX_UNSUPPORTED: fn SetTransparent(self: Pin<&mut wxWindow>, alpha: wxByte) -> bool;
        // BLOCKED: unsafe fn GetEventHandler(self: Pin<&mut wxWindow>) -> *mut wxEvtHandler;
        fn HandleAsNavigationKey(self: Pin<&mut wxWindow>, event: &wxKeyEvent) -> bool;
        // BLOCKED: fn HandleWindowEvent(self: Pin<&mut wxWindow>, event: Pin<&mut wxEvent>) -> bool;
        fn ProcessWindowEvent(self: Pin<&mut wxWindow>, event: Pin<&mut wxEvent>) -> bool;
        fn ProcessWindowEventLocally(self: Pin<&mut wxWindow>, event: Pin<&mut wxEvent>) -> bool;
        unsafe fn PopEventHandler(self: Pin<&mut wxWindow>, deleteHandler: bool) -> *mut wxEvtHandler;
        unsafe fn PushEventHandler(self: Pin<&mut wxWindow>, handler: *mut wxEvtHandler);
        unsafe fn RemoveEventHandler(self: Pin<&mut wxWindow>, handler: *mut wxEvtHandler) -> bool;
        unsafe fn SetEventHandler(self: Pin<&mut wxWindow>, handler: *mut wxEvtHandler);
        unsafe fn SetNextHandler(self: Pin<&mut wxWindow>, handler: *mut wxEvtHandler);
        unsafe fn SetPreviousHandler(self: Pin<&mut wxWindow>, handler: *mut wxEvtHandler);
        // CXX_UNSUPPORTED: fn GetExtraStyle(self: Pin<&mut wxWindow>) -> i32;
        // CXX_UNSUPPORTED: fn GetWindowStyleFlag(self: Pin<&mut wxWindow>) -> i32;
        // CXX_UNSUPPORTED: fn GetWindowStyle(self: Pin<&mut wxWindow>) -> i32;
        // CXX_UNSUPPORTED: fn HasExtraStyle(self: Pin<&mut wxWindow>, exFlag: i32) -> bool;
        // CXX_UNSUPPORTED: fn HasFlag(self: Pin<&mut wxWindow>, flag: i32) -> bool;
        // CXX_UNSUPPORTED: fn SetExtraStyle(self: Pin<&mut wxWindow>, exStyle: i32);
        // CXX_UNSUPPORTED: fn SetWindowStyleFlag(self: Pin<&mut wxWindow>, style: i32);
        // CXX_UNSUPPORTED: fn SetWindowStyle(self: Pin<&mut wxWindow>, style: i32);
        // CXX_UNSUPPORTED: fn ToggleWindowStyle(self: Pin<&mut wxWindow>, flag: i32) -> bool;
        unsafe fn MoveAfterInTabOrder(self: Pin<&mut wxWindow>, win: *mut wxWindow);
        unsafe fn MoveBeforeInTabOrder(self: Pin<&mut wxWindow>, win: *mut wxWindow);
        // CXX_UNSUPPORTED: fn Navigate(self: Pin<&mut wxWindow>, flags: i32) -> bool;
        // CXX_UNSUPPORTED: fn NavigateIn(self: Pin<&mut wxWindow>, flags: i32) -> bool;
        fn Lower(self: Pin<&mut wxWindow>);
        fn Raise(self: Pin<&mut wxWindow>);
        fn Hide(self: Pin<&mut wxWindow>) -> bool;
        // CXX_UNSUPPORTED: fn HideWithEffect(self: Pin<&mut wxWindow>, effect: wxShowEffect, timeout: unsigned int) -> bool;
        // BLOCKED: fn IsEnabled(self: Pin<&mut wxWindow>) -> bool;
        // CXX_UNSUPPORTED: fn IsExposed(self: Pin<&mut wxWindow>, x: i32, y: i32) -> bool;
        // BLOCKED: fn IsExposed(self: Pin<&mut wxWindow>, pt: Pin<&mut wxPoint>) -> bool;
        // CXX_UNSUPPORTED: fn IsExposed(self: Pin<&mut wxWindow>, x: i32, y: i32, w: i32, h: i32) -> bool;
        // BLOCKED: fn IsExposed(self: Pin<&mut wxWindow>, rect: Pin<&mut wxRect>) -> bool;
        // BLOCKED: fn IsShown(self: Pin<&mut wxWindow>) -> bool;
        // BLOCKED: fn IsShownOnScreen(self: Pin<&mut wxWindow>) -> bool;
        fn Disable(self: Pin<&mut wxWindow>) -> bool;
        fn Enable(self: Pin<&mut wxWindow>, enable: bool) -> bool;
        fn Show(self: Pin<&mut wxWindow>, show: bool) -> bool;
        // CXX_UNSUPPORTED: fn ShowWithEffect(self: Pin<&mut wxWindow>, effect: wxShowEffect, timeout: unsigned int) -> bool;
        // CXX_UNSUPPORTED: fn GetHelpText(self: Pin<&mut wxWindow>) -> wxString;
        fn SetHelpText(self: Pin<&mut wxWindow>, helpText: &wxString);
        // CXX_UNSUPPORTED: fn GetHelpTextAtPoint(self: Pin<&mut wxWindow>, point: &wxPoint, origin: wxHelpEvent::Origin) -> wxString;
        // BLOCKED: unsafe fn GetToolTip(self: Pin<&mut wxWindow>) -> *mut wxToolTip;
        // CXX_UNSUPPORTED: fn GetToolTipText(self: Pin<&mut wxWindow>) -> wxString;
        fn SetToolTip(self: Pin<&mut wxWindow>, tipString: &wxString);
        #[rust_name = "SetToolTip1"]
        unsafe fn SetToolTip(self: Pin<&mut wxWindow>, tip: *mut wxToolTip);
        fn UnsetToolTip(self: Pin<&mut wxWindow>);
        // CXX_UNSUPPORTED: fn GetPopupMenuSelectionFromUser(self: Pin<&mut wxWindow>, menu: Pin<&mut wxMenu>, pos: &wxPoint) -> i32;
        // CXX_UNSUPPORTED: fn GetPopupMenuSelectionFromUser(self: Pin<&mut wxWindow>, menu: Pin<&mut wxMenu>, x: i32, y: i32) -> i32;
        unsafe fn PopupMenu(self: Pin<&mut wxWindow>, menu: *mut wxMenu, pos: &wxPoint) -> bool;
        // CXX_UNSUPPORTED: unsafe fn PopupMenu(self: Pin<&mut wxWindow>, menu: *mut wxMenu, x: i32, y: i32) -> bool;
        unsafe fn GetValidator(self: Pin<&mut wxWindow>) -> *mut wxValidator;
        fn SetValidator(self: Pin<&mut wxWindow>, validator: &wxValidator);
        fn TransferDataFromWindow(self: Pin<&mut wxWindow>) -> bool;
        fn TransferDataToWindow(self: Pin<&mut wxWindow>) -> bool;
        fn Validate(self: Pin<&mut wxWindow>) -> bool;
        // CXX_UNSUPPORTED: fn GetId(self: Pin<&mut wxWindow>) -> i32;
        // CXX_UNSUPPORTED: fn GetLabel(self: Pin<&mut wxWindow>) -> wxString;
        // CXX_UNSUPPORTED: fn GetLayoutDirection(self: Pin<&mut wxWindow>) -> wxLayoutDirection;
        // CXX_UNSUPPORTED: fn AdjustForLayoutDirection(self: Pin<&mut wxWindow>, x: wxCoord, width: wxCoord, widthTotal: wxCoord) -> wxCoord;
        // CXX_UNSUPPORTED: fn GetName(self: Pin<&mut wxWindow>) -> wxString;
        // CXX_UNSUPPORTED: fn GetWindowVariant(self: Pin<&mut wxWindow>) -> wxWindowVariant;
        // CXX_UNSUPPORTED: fn SetId(self: Pin<&mut wxWindow>, winid: i32);
        fn SetLabel(self: Pin<&mut wxWindow>, label: &wxString);
        // CXX_UNSUPPORTED: fn SetLayoutDirection(self: Pin<&mut wxWindow>, dir: wxLayoutDirection);
        fn SetName(self: Pin<&mut wxWindow>, name: &wxString);
        // CXX_UNSUPPORTED: fn SetWindowVariant(self: Pin<&mut wxWindow>, variant: wxWindowVariant);
        unsafe fn GetAcceleratorTable(self: Pin<&mut wxWindow>) -> *mut wxAcceleratorTable;
        // CXX_UNSUPPORTED: unsafe fn GetAccessible(self: Pin<&mut wxWindow>) -> *mut wxAccessible;
        fn SetAcceleratorTable(self: Pin<&mut wxWindow>, accel: &wxAcceleratorTable);
        // CXX_UNSUPPORTED: unsafe fn SetAccessible(self: Pin<&mut wxWindow>, accessible: *mut wxAccessible);
        fn Close(self: Pin<&mut wxWindow>, force: bool) -> bool;
        fn Destroy(self: Pin<&mut wxWindow>) -> bool;
        // BLOCKED: fn IsBeingDeleted(self: Pin<&mut wxWindow>) -> bool;
        // BLOCKED: unsafe fn GetDropTarget(self: Pin<&mut wxWindow>) -> *mut wxDropTarget;
        unsafe fn SetDropTarget(self: Pin<&mut wxWindow>, target: *mut wxDropTarget);
        fn DragAcceptFiles(self: Pin<&mut wxWindow>, accept: bool);
        // BLOCKED: unsafe fn GetContainingSizer(self: Pin<&mut wxWindow>) -> *mut wxSizer;
        // BLOCKED: unsafe fn GetSizer(self: Pin<&mut wxWindow>) -> *mut wxSizer;
        unsafe fn SetSizer(self: Pin<&mut wxWindow>, sizer: *mut wxSizer, deleteOld: bool);
        unsafe fn SetSizerAndFit(self: Pin<&mut wxWindow>, sizer: *mut wxSizer, deleteOld: bool);
        // BLOCKED: unsafe fn GetConstraints(self: Pin<&mut wxWindow>) -> *mut wxLayoutConstraints;
        unsafe fn SetConstraints(self: Pin<&mut wxWindow>, constraints: *mut wxLayoutConstraints);
        fn Layout(self: Pin<&mut wxWindow>) -> bool;
        fn SetAutoLayout(self: Pin<&mut wxWindow>, autoLayout: bool);
        // BLOCKED: fn GetAutoLayout(self: Pin<&mut wxWindow>) -> bool;
        fn CaptureMouse(self: Pin<&mut wxWindow>);
        // BLOCKED: unsafe fn GetCaret(self: Pin<&mut wxWindow>) -> *mut wxCaret;
        // BLOCKED: fn GetCursor(self: Pin<&mut wxWindow>) -> &wxCursor;
        // BLOCKED: fn HasCapture(self: Pin<&mut wxWindow>) -> bool;
        fn ReleaseMouse(self: Pin<&mut wxWindow>);
        unsafe fn SetCaret(self: Pin<&mut wxWindow>, caret: *mut wxCaret);
        fn SetCursor(self: Pin<&mut wxWindow>, cursor: &wxCursor) -> bool;
        // CXX_UNSUPPORTED: fn WarpPointer(self: Pin<&mut wxWindow>, x: i32, y: i32);
        // CXX_UNSUPPORTED: fn EnableTouchEvents(self: Pin<&mut wxWindow>, eventsMask: i32) -> bool;
        // CXX_UNSUPPORTED: fn HitTest(self: Pin<&mut wxWindow>, x: wxCoord, y: wxCoord) -> wxHitTest;
        // CXX_UNSUPPORTED: fn HitTest(self: Pin<&mut wxWindow>, pt: &wxPoint) -> wxHitTest;
        // CXX_UNSUPPORTED: fn GetBorder(self: Pin<&mut wxWindow>, flags: i32) -> wxBorder;
        // CXX_UNSUPPORTED: fn GetBorder(self: Pin<&mut wxWindow>) -> wxBorder;
        fn DoUpdateWindowUI(self: Pin<&mut wxWindow>, event: Pin<&mut wxUpdateUIEvent>);
        // CXX_UNSUPPORTED: fn GetHandle(self: Pin<&mut wxWindow>) -> WXWidget;
        // BLOCKED: fn HasMultiplePages(self: Pin<&mut wxWindow>) -> bool;
        fn InheritAttributes(self: Pin<&mut wxWindow>);
        fn InitDialog(self: Pin<&mut wxWindow>);
        // BLOCKED: fn IsDoubleBuffered(self: Pin<&mut wxWindow>) -> bool;
        // BLOCKED: fn SetDoubleBuffered(self: Pin<&mut wxWindow>, on: bool);
        // BLOCKED: fn IsRetained(self: Pin<&mut wxWindow>) -> bool;
        // BLOCKED: fn IsThisEnabled(self: Pin<&mut wxWindow>) -> bool;
        // BLOCKED: fn IsTopLevel(self: Pin<&mut wxWindow>) -> bool;
        fn OnInternalIdle(self: Pin<&mut wxWindow>);
        fn SendIdleEvents(self: Pin<&mut wxWindow>, event: Pin<&mut wxIdleEvent>) -> bool;
        // CXX_UNSUPPORTED: fn RegisterHotKey(self: Pin<&mut wxWindow>, hotkeyId: i32, modifiers: i32, virtualKeyCode: i32) -> bool;
        // CXX_UNSUPPORTED: fn UnregisterHotKey(self: Pin<&mut wxWindow>, hotkeyId: i32) -> bool;
        // CXX_UNSUPPORTED: fn UpdateWindowUI(self: Pin<&mut wxWindow>, flags: i32);
        // CXX_UNSUPPORTED: fn GetClassDefaultAttributes(self: Pin<&mut wxWindow>, variant: wxWindowVariant) -> wxVisualAttributes;
        // BLOCKED: unsafe fn FindFocus(self: Pin<&mut wxWindow>) -> *mut wxWindow;
        // CXX_UNSUPPORTED: unsafe fn FindWindowById(self: Pin<&mut wxWindow>, id: i32, parent: *const wxWindow) -> *mut wxWindow;
        // BLOCKED: unsafe fn FindWindowByLabel(self: Pin<&mut wxWindow>, label: &wxString, parent: *const wxWindow) -> *mut wxWindow;
        // BLOCKED: unsafe fn FindWindowByName(self: Pin<&mut wxWindow>, name: &wxString, parent: *const wxWindow) -> *mut wxWindow;
        // BLOCKED: unsafe fn GetCapture(self: Pin<&mut wxWindow>) -> *mut wxWindow;
        // CXX_UNSUPPORTED: fn NewControlId(self: Pin<&mut wxWindow>, count: i32) -> i32;
        // CXX_UNSUPPORTED: fn UnreserveControlId(self: Pin<&mut wxWindow>, id: i32, count: i32);
        // CXX_UNSUPPORTED: fn DoCentre(self: Pin<&mut wxWindow>, direction: i32);
        // CXX_UNSUPPORTED: fn DoGetBestSize(self: Pin<&mut wxWindow>) -> wxSize;
        // CXX_UNSUPPORTED: fn DoGetBestClientSize(self: Pin<&mut wxWindow>) -> wxSize;
        // CXX_UNSUPPORTED: fn DoGetBestClientHeight(self: Pin<&mut wxWindow>, width: i32) -> i32;
        // CXX_UNSUPPORTED: fn DoGetBestClientWidth(self: Pin<&mut wxWindow>, height: i32) -> i32;
        // BLOCKED: fn SetInitialBestSize(self: Pin<&mut wxWindow>, size: &wxSize);
        // BLOCKED: fn SendDestroyEvent(self: Pin<&mut wxWindow>);
        // BLOCKED: fn ProcessEvent(self: Pin<&mut wxWindow>, event: Pin<&mut wxEvent>) -> bool;
        // BLOCKED: fn SafelyProcessEvent(self: Pin<&mut wxWindow>, event: Pin<&mut wxEvent>) -> bool;
        // BLOCKED: unsafe fn QueueEvent(self: Pin<&mut wxWindow>, event: *mut wxEvent);
        // BLOCKED: fn AddPendingEvent(self: Pin<&mut wxWindow>, event: &wxEvent);
        // BLOCKED: fn ProcessPendingEvents(self: Pin<&mut wxWindow>);
        // BLOCKED: fn ProcessThreadEvent(self: Pin<&mut wxWindow>, event: &wxEvent) -> bool;
        // CTOR: fn wxWindow(self: Pin<&mut wxWindow>);
        // CTOR: unsafe fn wxWindow(self: Pin<&mut wxWindow>, parent: *mut wxWindow, id: i32, pos: &wxPoint, size: &wxSize, style: i32, name: &wxString);
        // CXX_UNSUPPORTED: fn ~wxWindow(self: Pin<&mut wxWindow>);
        // CXX_UNSUPPORTED: unsafe fn Create(self: Pin<&mut wxWindow>, parent: *mut wxWindow, id: i32, pos: &wxPoint, size: &wxSize, style: i32, name: &wxString) -> bool;
    }
}

